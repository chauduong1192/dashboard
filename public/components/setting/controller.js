"use strict";angular.module(window.APP.modules.setting).controller("settings",["$scope","$state","$filter","alertify","settingAPI",function(a,b,c,d,e){function f(){g(a.query,function(b){a.settings=b,h(a.query,function(b){a.count.settings=b})})}function g(a,b){e.query(a,function(a){b&&b(a)})}function h(a,b){e.count(a,function(a){b&&b(a.total)})}function i(a,b){a.$delete(function(a){b&&b(a),d.success(c("translate")("X_HAS_BEEN_DELETED",a.key))})}a.query={query:void 0,sort:"key",page:1,limit:25},a.count={settings:0},f(),a.search=function(b){b&&(a.query.sort=b),f()},a.canCreate=function(){return e.canCreate()},a["delete"]=function(b){b&&b.canDelete()&&confirm(c("translate")("CONFIRM_DELETE_X",b.key))&&i(b,function(b){a.settings.forEach(function(c,d){c._id===b._id&&a.settings.splice(d,1)})})}}]).controller("settingDetails",["$scope","$state","$stateParams","$modal","$filter","alertify","settingAPI",function(a,b,c,d,e,f,g){function h(a,c){g.get(a,function(a){c&&c(a)},function(a){b.go("settings")})}function i(b,c){b.$save(function(a){c&&c(a),f.success(e("translate")("X_HAS_BEEN_CREATED",a.key))},function(b){b.data.validationErrors&&(a.validationErrors=b.data.validationErrors)})}function j(b,c){b.$update(function(a){c&&c(a),f.success(e("translate")("X_HAS_BEEN_UPDATED",a.key))},function(b){b.data.validationErrors&&(a.validationErrors=b.data.validationErrors)})}function k(a,b){a.$delete(function(a){b&&b(a),f.success(e("translate")("X_HAS_BEEN_DELETED",a.key))})}"settingCreate"===b.current.name?(a.state="create",a.setting=new g({key:void 0,value:void 0}),a.selectedType="text",a.tmpValue=void 0):(a.state="details",h({_id:c.settingId},function(b){a.setting=b,"object"==typeof a.setting.value?(a.selectedType="JSON",a.tmpValue=e("json")(a.setting.value,8)):"number"==typeof a.setting.value?(a.selectedType="number",a.tmpValue=a.setting.value):(a.selectedType="text",a.tmpValue=String(a.setting.value))})),a.validationErrors={key:void 0,value:void 0},a.save=function(){if(a.form.$valid){if("JSON"===a.selectedType)try{a.setting.value=JSON.parse(a.tmpValue)}catch(c){return void f.alert(e("translate")("INVALID_DATA_TYPE"))}else if("number"===a.selectedType){var d=Number(a.tmpValue);if(isNaN(d))return void f.alert(e("translate")("INVALID_DATA_TYPE"));a.setting.value=d}else a.setting.value=String(a.tmpValue);"create"===a.state?a.setting.canCreate()&&i(a.setting,function(c){a.form.$setPristine(),b.go("settingDetails",{settingId:c._id})}):a.setting.canEdit()&&j(a.setting,function(b){a.form.$setPristine(),a.setting=b,"object"==typeof a.setting.value?(a.selectedType="JSON",a.tmpValue=e("json")(a.setting.value,8)):"number"==typeof a.setting.value?(a.selectedType="number",a.tmpValue=a.setting.value):(a.selectedType="text",a.tmpValue=String(a.setting.value))})}},a["delete"]=function(){a.setting.canDelete()&&confirm(e("translate")("CONFIRM_DELETE_X",a.setting.key))&&k(a.setting,function(c){a.form.$setPristine(),b.go("settings")})}}]);